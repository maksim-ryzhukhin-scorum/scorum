/*****************************************
 *                                       *
 * This file is automatically generated. *
 * To create new hardfork, please modify *
 * the .hf files in hardfork.d instead   *
 * of modifying this file.               *
 *                                       *
 *****************************************/

#pragma once

#include <scorum/protocol/types.hpp>
#include <scorum/protocol/version.hpp>
#include <fc/shared_containers.hpp>

namespace scorum { namespace chain {

class hardfork_property_object : public object< hardfork_property_object_type, hardfork_property_object >
{
   public:
      CHAINBASE_DEFAULT_DYNAMIC_CONSTRUCTOR(hardfork_property_object, (processed_hardforks))

      id_type                                                              id;

      fc::shared_vector< fc::time_point_sec >                              processed_hardforks;
      uint32_t                                                             last_hardfork = 0;
      protocol::hardfork_version                                           current_hardfork_version;
      protocol::hardfork_version                                           next_hardfork;
      fc::time_point_sec                                                   next_hardfork_time;
};

typedef fc::shared_multi_index_container<
   hardfork_property_object,
   indexed_by<
      ordered_unique< member< hardfork_property_object, hardfork_property_object::id_type, &hardfork_property_object::id > >
   >
> hardfork_property_index;

} } // namespace scorum::chain

FC_REFLECT( scorum::chain::hardfork_property_object,
   (id)(processed_hardforks)(last_hardfork)(current_hardfork_version)
   (next_hardfork)(next_hardfork_time) )
CHAINBASE_SET_INDEX_TYPE( scorum::chain::hardfork_property_object, scorum::chain::hardfork_property_index )

#define SCORUM_NUM_HARDFORKS 6
